import React, { useEffect, useState }  from 'react'
import TagsInput from "../../../../components/TextField/TagsInput"
import { useTheme, makeStyles, styled } from "@material-ui/core/styles";

import AddIcon from '@material-ui/icons/Add';
import EditTwoToneIcon from '@material-ui/icons/EditTwoTone';

import DeleteForeverTwoToneIcon from '@material-ui/icons/DeleteForeverTwoTone';

import {
    Button,
    TextField,
    Typography,
    Grid,
    Box,
    InputAdornment,
    FormControl,
    InputLabel,
    Select,
    IconButton,
    Tooltip,
    Dialog,
    FormControlLabel,
    Switch,
    Collapse,
    Paper,
    Card,
    CardHeader,
    MenuItem
  } from "@material-ui/core";

  const useStyles = makeStyles((theme) => ({
    formControl: {
        marginRight:10,
        minWidth: 220,
      },
    row:{
        margin: "15px 20px 10px 20px", 
    }
    
  }));

const AddAttribute = ({attributeList,datas,setDatas}) => {

    const theme = useTheme();
    const classes = useStyles(theme);


    const updateFieldChanged = (index, attr,value) =>  {
        let newArr = [...datas]; 
        newArr[index] = {"key" :attr, "items": value};
        setDatas(newArr); 
    }

    const deleteAttr = (key) =>{
        console.log("key,",key)
        var newArr = [...datas]; 
        newArr =  newArr.filter(row => row.key !== key)  
        setDatas(newArr); 
    }

    const addAttrRow = () =>{
        let newArr = [...datas]; 
        newArr = [...datas,datas.push({ key:  "unset",  items: []})];
        setDatas(newArr); 
    }
      
    console.log("datas",datas)
    return (
        <div style={{marginBottom:10}}>
            { datas.map( (data, index) => {
                return (
                    <AttributeRow attributeList={attributeList} index={index} data={data}  updateFieldChanged={updateFieldChanged} deleteAttr={deleteAttr}/>
                )
            }) }
            <Button variant="outlined"size="small" color="primary" style={{marginLeft:20,marginTop:10,textTransform: "none"}}
                startIcon={<AddIcon />}
                onClick={()=>addAttrRow()}>
                    Thêm thuộc tính
            </Button>

        </div>
    )
}

export default AddAttribute


const AttributeRow = ({attributeList,data,datas,updateFieldChanged,index,deleteAttr,setDatas}) => {
    const theme = useTheme();
    const classes = useStyles(theme);

    const [attr, setAtt] = React.useState('unset');
    const [value, setValue] = React.useState([]);


    const handleChangeAttr = (event) => {
        setAtt(event.target.value)
        updateFieldChanged(index, event.target.value,value)
    };

    function handleSelecetedTags(items) {  
        setValue(items);
        // updateFieldChanged(index, 'leoo', items)

    }

    useEffect(() => {
        console.log("value",value)
        updateFieldChanged(index, attr,value);
    }, [  value ]);


 
   
    return (
      <Grid container className={classes.row} alignItems="center">
            <Grid container item xs={11} alignItems="center" >
                 <FormControl className={classes.formControl}>                     
                        <Select  value={data.key} onChange={handleChangeAttr}  >
                            <MenuItem value="unset" selected disabled hidden>Chọn thuộc tính...</MenuItem>
                            {attributeList.map((attr)=>{
                            return (<MenuItem value={attr.name}>{attr.name}</MenuItem>)
                            }) }
                        </Select>
                        
                    </FormControl>
                    <EditTwoToneIcon style={{ marginRight:60}}/>
                    <TagsInput style={{minWidth: 270}} selectedTags={handleSelecetedTags} placeholder="Nhấn giá trị và enter" 
                    />
            </Grid>

            <Grid container item xs={1} >
                <DeleteForeverTwoToneIcon onClick={()=>{deleteAttr(data.key)}}/>
            </Grid>
            
    </Grid>
    )
}
